grammar Calc;

start returns [int res] : t1 = t() e_1 = e_(t1) {res = e_1;};

e_(int acc) returns [int res] : PLUS t1 = t() {int propAcc = acc + t1;} e_1 = e_(propAcc) {res = e_1;}
							  | MINUS t2 = t() {int propAcc2 = acc - t2;} e_2 = e_(propAcc2) {res = e_2;}
							  | EPS {res = acc;};

t returns [int res] : s1 = s() t_1 = t_(s1) {res = t_1;};

t_(int acc) returns [int res] : MUL s1 = s() {int propAcc = acc * s1;} t_1 = t_(propAcc) {res = t_1;}
                     | DIV s2 = s() {int propAcc2 = acc / s2;} t_2 = t_(propAcc2) {res = t_2;}
					 | EPS {res = acc;};

s returns [int res] : f1 = f() s_1 = s_(f1) {res = s_1;};

s_(int acc) returns [int res] : POW f1=f() s_1=s_(f1) {res = (int)Math.pow((double)acc, (double)s_1);}
                    | EPS {res = acc;};

f returns [int res] : LB e1 = start() RB {res = e1;}
					| num = NUM {res = Integer.parseInt(num.getFilling());}
					| MINUS f1 = f() {res = -1 * f1;};

PLUS    :   "\\+";
POW     :   "\\*{2}";
MINUS   :   "-";
MUL     :   "\\*";
DIV     :   "/";
LB      :   "\\(";
RB      :   "\\)";
NUM     :   "([1-9][0-9]*)|0";